import http from 'k6/http';
// import { sleep, check } from 'k6';

export const options = {
  scenarios: {
    constant_request_rate: {
      executor: 'constant-arrival-rate',
      rate: 1,
      timeUnit: '1s',
      duration: '1m',
      preAllocatedVUs: 10,
      maxVUs: 10
    }
  }
  // thresholds: {
  //   http_req_duration: ["p(99)<2000"],
  //   http_req_failed: ["rate<0.01"]
  // }
};

let idOptions = [973357, 942582, 956308, 997714, 979119, 910789, 922933, 965314, 964021, 985645, 971277, 912613, 904881, 941269, 957219, 935933, 937571, 935238, 983896, 922438, 975521, 918134, 967205, 964461, 907288, 927677, 991393, 928303, 986861, 900482, 983389, 913319, 972440, 943920, 989429, 984496, 934201, 940741, 998805, 907553, 909718, 939697, 990238, 977073, 914533, 960521, 954076, 951440, 955195, 920106, 904174, 969208, 976713, 916485, 937447, 910639, 954765, 917535, 958703, 994466, 922074, 996592, 925016, 942048, 937833, 911681, 968463, 919019, 911645, 905490, 967010, 946971, 995977, 987119, 963562, 918439, 967388, 931821, 951524, 942637, 935753, 914868, 908349, 975610, 946446, 961975, 953998, 967116, 941773, 908521, 920812, 943237, 988679, 902050, 976276, 976810, 914061, 954711, 975166, 969893, 908167, 974660, 946806, 957178, 987314, 949877, 919642, 971003, 998827, 921427, 932036, 952354, 990135, 987921, 936928, 906987, 953512, 906641, 968208, 972531, 979570, 971073, 914360, 947626, 996043, 935008, 976989, 948061, 969851, 991701, 956746, 904631, 933919, 994246, 904669, 910766, 955905, 913376, 973070, 974299, 909556, 956891, 998364, 963087, 956303, 902065, 909828, 933030, 952615, 919776, 994397, 979732, 930198, 950810, 983307, 930329, 959139, 904775, 965769, 964774, 917124, 998301, 967623, 937900, 910713, 942609, 990531, 961336, 978940, 926400, 942797, 968139, 911533, 917871, 958592, 934270, 992495, 999696, 974911, 933072, 905537, 993383, 912296, 994647, 921430, 906174, 926657, 950354, 998282, 916163, 937324, 985334, 900742, 986330, 943274, 903392, 902534, 928227, 989784, 968525, 914594, 966388, 937960, 972640, 911241, 993051, 932459, 997148, 913462, 973124, 998470, 976521, 936626, 983396, 963521, 995490, 988216, 959501, 908062, 924091, 950820, 997692, 984009, 972599, 981648, 963433, 958433, 933939, 901993, 995443, 954250, 900889, 931873, 964494, 989336, 917619, 984695, 955340, 924932, 985398, 988362, 915586, 948850, 980401, 957444, 907306, 984462, 953727, 949358, 977337, 960445, 908790, 959482, 904697, 908144, 901394, 976882, 968932, 983007, 937834, 965628, 980251, 951824, 915997, 996234, 942875, 935909, 927723, 929303, 906681, 989091, 957992, 952195, 988641, 979503, 978102, 923083, 914147, 981632, 971866, 902109, 983975, 961481, 982866, 980278, 902304, 979227, 971357, 974438, 987022, 944514, 992331, 994249, 983421, 972218, 945662, 979504, 992204, 917862, 992091, 988513, 953047, 905909, 937922, 965560, 960356, 998437, 995677, 972801, 905067, 950254, 962263, 989124, 908564, 940922, 968885, 951989, 945340, 919455, 980214, 974277, 973474, 969963, 939891, 993982, 954924, 956028, 903297, 975354, 954877, 939323, 942776, 966155, 947576, 991201, 907512, 994209, 919172, 910018, 977086, 958743, 997256, 949483, 936199, 979537, 904314, 991358, 971396, 914353, 983939, 979712, 937164, 970251, 980948, 926010, 959348, 947106, 924097, 994250, 933210, 925714, 982154, 997591, 907922, 942280, 993371, 949235, 989011, 904323, 906126, 934811, 969763, 946799, 999533, 985099, 942469, 982722, 950624, 904540, 934810, 962029, 926269, 967268, 984707, 934222, 997611, 935404, 981477, 948136, 957969, 988890, 912708, 945725, 920349, 948850, 943157, 955324, 963756, 990323, 905317, 985179, 996666, 996991, 969439, 994174, 983139, 912931, 961900, 955719, 937330, 927825, 946443, 979003, 913824, 974318, 949173, 987085, 911830, 974076, 918479, 992331, 908839, 914206, 914132, 955497, 930530, 931763, 903656, 990345, 947184, 949863, 973462, 941480, 901692, 941156, 921064, 974246, 919293, 901767, 908715, 994408, 964706, 991587, 924480, 955201, 933244, 948615, 937385, 995694, 971223, 969701, 967703, 947317, 914792, 902662, 986008, 937990, 902129, 961170, 982806, 956267, 928428, 942502, 903788, 985289, 926884, 926966, 971682, 922668, 924858, 947427, 970434, 949787, 972426, 929424, 957762, 953036, 945054, 926390, 976349, 975809, 924389, 923540, 998943, 928193, 927687, 987203, 912995, 965699, 976113, 920705, 963785, 960664, 988298, 915417, 933575, 991066, 947042, 958163, 968316, 987490, 969099, 908513, 903188, 986120, 948349, 944033, 938247, 970235, 975234, 916356, 966328, 968915, 984125, 973382, 954712, 990170, 907083, 962895, 965091, 996231, 954657, 905770, 918825, 970575, 993334, 979057, 955408, 959169, 917352, 939147, 941410, 972136, 929634, 965278, 984667, 988607, 930249, 956746, 939482, 960662, 931810, 954441, 995338, 927958, 969794, 991168, 957687, 932437, 914188, 924656, 998927, 922341, 994412, 955270, 965785, 933645, 928281, 903602, 928172, 948302, 996600, 955029, 960435, 940639, 939185, 963669, 996356, 933092]
export default function () {
  // let product_id = Math.floor(Math.random() * (1000011 - 900009 + 1)) + 900009;
  let product_id = Math.floor(Math.random() * 569);
  // http.get(`http://localhost:8080/reviews?product_id=${idOptions[product_id]}`);
  // http.get(`http://localhost:8080/reviews/meta?product_id=${idOptions[product_id]}`);

  // http.put(`http://localhost:8080/reviews/${idOptions[product_id]}/helpful`);
  http.put(`http://localhost:8080/reviews/${idOptions[product_id]}/report`);

  // let char_id = Math.floor(Math.random() * (3347679 - 3012714 + 1)) + 3012714;
  // let char_id2 = Math.floor(Math.random() * (3347679 - 3012714 + 1)) + 3012714;
  // const data = {
  //   "product_id": idOptions[product_id],
  //   "rating": 5,
  //   "summary": "K6K6K6",
  //   "body": "K6K6K6",
  //   "recommend": true,
  //   "name": "K6K6K6",
  //   "email": "K6K6K6@K6K6K6.com",
  //   "photos": [
  //     "K6K6K6"
  //   ],
  //   "characteristics": { [char_id]: 5, [char_id2]: 5}
  // };
  // http.post(`http://localhost:8080/reviews`, JSON.stringify(data), {
  //   headers: { 'Content-Type': 'application/json' }
  // });

  // check(res, {
  //   // 'is status 500': (r) => r.status === 500 // error
  //   'is status 200': (r) => r.status === 200 // GET
  //   // 'is status 204': (r) => r.status === 204 // PUT
  //   // 'is status 201': (r) => r.status === 201 // POST
  // });

  // sleep(1);
}
